type GASTOS @model @auth(rules: [{ allow: public }]) {
  id: ID!
  montoGasto: Float
  descripcion: String
  turnoID: ID! @index(name: "byTurno")
  fecha: String
  opticaID: ID! @index(name: "byOPTICA")
}

type DOCUMENTOS @model @auth(rules: [{ allow: public }]) {
  id: ID!
  tipoDocumento: TIPODOCUMENTO
  serie: String
  numeroSecuencial: Int
  ordenID: ID! @index(name: "byORDEN")
  opticaID: ID! @index(name: "byOPTICA")
}

enum TIPODOCUMENTO {
  TICKET
  NOTADEVENTA
  FACTURA
}

type CONFIGURACIONDOCUMENTO @model @auth(rules: [{ allow: public }]) {
  id: ID!
  tipoDocumento: TIPODOCUMENTO
  serieActual: String
  numeroSecuencialActual: Int
  opticaID: ID! @index(name: "byOPTICA")
}

enum TIPOTRANSACCION {
  VENTA
  COBRO
}

type Transacciones @model @auth(rules: [{ allow: public }]) {
  id: ID!
  monto: String
  metodoPago: METODOPAGO
  turnoID: ID! @index(name: "byTurno")
  ordenID: ID! @index(name: "byORDEN")
  tipoTransaccion: TIPOTRANSACCION
  fecha: String
}

enum METODOPAGO {
  TARJETA_CREDITO
  TRANSFERENCIA
  EFECTIVO
}

type Deudas @model @auth(rules: [{ allow: public }]) {
  id: ID!
  fecha: String
  montoDeuda: Float
  estado: String
  turnoID: ID! @index(name: "byTurno")
  ordenID: ID! @index(name: "byORDEN")
  opticaID: ID! @index(name: "byOPTICA")
}

type Turno @model @auth(rules: [{ allow: public }]) {
  id: ID!
  montoInicial: Float!
  fechaApertura: String!
  montoCierre: Float
  fechaCierre: String
  cajaID: ID! @index(name: "byCaja")
  ORDENS: [ORDEN] @hasMany(indexName: "byTurno", fields: ["id"])
  Deudas: [Deudas] @hasMany(indexName: "byTurno", fields: ["id"])
  usuario: ID
  estado: String
  Transacciones: [Transacciones] @hasMany(indexName: "byTurno", fields: ["id"])
  GASTOS: [GASTOS] @hasMany(indexName: "byTurno", fields: ["id"])
}

type Caja @model @auth(rules: [{ allow: public }]) {
  id: ID!
  nombre: String!
  opticaID: ID! @index(name: "byOPTICA")
  Turnos: [Turno] @hasMany(indexName: "byCaja", fields: ["id"])
}

enum ORDENSTATUS {
  CREADA
  ENVIADAMAQUILA
  ENTREGADA
  CONPROBLEMAS
  FINALIZADA
}

type INVENTARIOORDENITEMS @model @auth(rules: [{ allow: public }]) {
  id: ID!
  cantidad: Int
  costo: Float
  inventarioID: ID! @index(name: "byINVENTARIO")
  ordenID: ID! @index(name: "byORDEN")
  idGraduation: Boolean
}

enum TIPOORDEN {
  COTIZACION
  ORDEN
}

type GERENTE @model @auth(rules: [{ allow: public }]) {
  id: ID!
  nombres: String!
  userName: String!
  email: String
  phoneNumber: String
  confirmed: Boolean
  blocked: Boolean
  createdBy: String!
  opticaID: ID! @index(name: "byOPTICA")
}

type VENDEDORES @model @auth(rules: [{ allow: public }]) {
  id: ID!
  nombres: String
  apellidoPaterno: String
  apellidoMaterno: String
  whats: String
  email: String
  opticaID: ID! @index(name: "byOPTICA")
}

enum ENUMCATEGORIA {
  DAMA
  CABALLERO
  BOY
}

type INVENTARIO @model @auth(rules: [{ allow: public }]) {
  id: ID!
  nombreProducto: String
  proveedor: String
  costo: Float!
  precioVenta: Float!
  color: String
  tipoEstructura: String
  urlImagen: String
  tipoMaterial: String
  categoria: ENUMCATEGORIA!
  INVENTARIOORDENITEMS: [INVENTARIOORDENITEMS]
    @hasMany(indexName: "byINVENTARIO", fields: ["id"])
  opticaID: ID! @index(name: "byOPTICA")
  stock: String
}

type ORDEN @model @auth(rules: [{ allow: public }]) {
  id: ID!
  opticaID: ID! @index(name: "byOPTICA")
  tipoOrden: TIPOORDEN
  clientesID: ID! @index(name: "byCLIENTES")
  usadoLentes: String
  fechaOrden: String
  horaOrden: String
  fechaExamen: String
  referencia: String
  fechaEntrega: String
  seRealizoExamen: String
  graduacionDerechaVieja: String
  graduacionIzquierdaVieja: String
  graduacionDerechaNueva: String
  graduacionIzquierdaNueva: String
  ordenStatus: ORDENSTATUS
  INVENTARIOORDENITEMS: [INVENTARIOORDENITEMS]
    @hasMany(indexName: "byORDEN", fields: ["id"])
  precioTotal: Float
  montoPagado: Float
  anticipo: Float
  precioGraduacion: Float
  turnoID: ID! @index(name: "byTurno")
  Deudas: [Deudas] @hasMany(indexName: "byORDEN", fields: ["id"])
  Transacciones: [Transacciones] @hasMany(indexName: "byORDEN", fields: ["id"])
  DOCUMENTOS: [DOCUMENTOS] @hasMany(indexName: "byORDEN", fields: ["id"])
}

type CLIENTES @model @auth(rules: [{ allow: public }]) {
  id: ID!
  nombres: String
  apellidoPaterno: String
  apellidoMaterno: String
  fechaNacimiento: String
  edad: String
  whats: String
  sexo: String
  email: String
  opticaID: ID! @index(name: "byOPTICA")
  ORDENS: [ORDEN] @hasMany(indexName: "byCLIENTES", fields: ["id"])
}

type OPTICA @model @auth(rules: [{ allow: public }]) {
  id: ID!
  nombre: String!
  createdBy: String!
  VENDEDORES: [VENDEDORES] @hasMany(indexName: "byOPTICA", fields: ["id"])
  GERENTES: [GERENTE] @hasMany(indexName: "byOPTICA", fields: ["id"])
  ORDENS: [ORDEN] @hasMany(indexName: "byOPTICA", fields: ["id"])
  CLIENTES: [CLIENTES] @hasMany(indexName: "byOPTICA", fields: ["id"])
  INVENTARIOS: [INVENTARIO] @hasMany(indexName: "byOPTICA", fields: ["id"])
  Cajas: [Caja] @hasMany(indexName: "byOPTICA", fields: ["id"])
  CONFIGURACIONDOCUMENTOS: [CONFIGURACIONDOCUMENTO]
    @hasMany(indexName: "byOPTICA", fields: ["id"])
  DOCUMENTOS: [DOCUMENTOS] @hasMany(indexName: "byOPTICA", fields: ["id"])
  direction: String
  cp: String
  rfc: String
  contactPhone: String
  codSerial: String
  Deudas: [Deudas] @hasMany(indexName: "byOPTICA", fields: ["id"])
  GASTOS: [GASTOS] @hasMany(indexName: "byOPTICA", fields: ["id"])
}
